package com.ftn.sbnz.rules.cep;

import com.ftn.sbnz.model.events.FindingEvent;
import com.ftn.sbnz.model.models.CreateSeasonalTipRequest;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.HashSet;
import java.util.Calendar;
import java.util.UUID;
import java.util.HashMap;

dialect "mvel"
declare SeasonalTipGenerated
    mineralId : UUID
    location : String
end

rule "Identify Seasonal Finding Spike"
    no-loop true
    when
        $trigger: FindingEvent(
            $mineralId: mineralId,
            $location: location
        )
        $analysis: Map() from accumulate (
            $event: FindingEvent(
                mineralId == $mineralId,
                location == $location
            ) over window:time(730d),

            init(
                Map data = new HashMap();
                data.put("peakCount", 0.0);
                data.put("offPeakCount", 0.0);
                data.put("years", new HashSet());
                // ISPRAVKA: Uklonjena 'return data;' naredba.
                // Poslednji izraz se implicitno vraća.
                data;
            ),

            action(
                Calendar cal = Calendar.getInstance();
                cal.setTime($event.getTimestamp());
                int month = cal.get(Calendar.MONTH);
                if (month == Calendar.SEPTEMBER || month == Calendar.OCTOBER) {
                    data.put("peakCount", (Double)data.get("peakCount") + 1.0);
                } else {
                    data.put("offPeakCount", (Double)data.get("offPeakCount") + 1.0);
                }
                ((Set)data.get("years")).add(cal.get(Calendar.YEAR));
            ),

            result(
                int yearCount = ((Set)data.get("years")).size();
                if (yearCount > 0) {
                    data.put("peakAvg", (Double)data.get("peakCount") / (2.0 * yearCount));
                    double offPeakMonths = 10.0 * yearCount;
                    data.put("offPeakAvg", (offPeakMonths > 0) ? (Double)data.get("offPeakCount") / offPeakMonths : 0.0);
                }
                // ISPRAVKA: Koristimo ispravnu sintaksu sa tačka-zarezom.
                data;
            )
        )

        eval(com.ftn.sbnz.model.utils.CepHelper.isSeasonalSpike($analysis))
        not SeasonalTipGenerated(mineralId == $mineralId, location == $location)
    then
        System.out.println("$$$ DETEKTOVAN SEZONSKI OBRAZAC! $$$");
        String message = String.format(
            "Podaci pokazuju da se ovaj mineral na lokaciji '%s' značajno češće pronalazi tokom septembra i oktobra.",
            $location
        );
        drools.insert(new CreateSeasonalTipRequest($mineralId, $location, message));
        drools.insert(new SeasonalTipGenerated($mineralId, $location));
end