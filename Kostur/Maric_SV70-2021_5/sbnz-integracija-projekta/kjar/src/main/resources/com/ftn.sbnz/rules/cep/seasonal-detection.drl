package com.ftn.sbnz.rules.cep;

import com.ftn.sbnz.model.events.FindingEvent;
import com.ftn.sbnz.model.models.CreateSeasonalTipRequest;
import com.ftn.sbnz.model.utils.CepHelper;
import com.ftn.sbnz.model.utils.CepHelper.SeasonalSpikeResult;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.HashSet;
import java.util.Calendar;
import java.util.UUID;
import java.util.HashMap;

dialect "mvel"

declare SeasonalTipGenerated
    mineralId : UUID
    location : String
end

rule "Identify Seasonal Finding Spike"
    no-loop true
    when
        $trigger: FindingEvent(
            $mineralId: mineralId,
            $location: location
        )
        // AŽURIRANI 'accumulate': Sada broji pronalaske za svaki mesec (0-11)
        $analysis: Map() from accumulate (
            $event: FindingEvent(
                mineralId == $mineralId,
                location == $location
            ) over window:time(730d),

            init(
                Map data = new HashMap();
                Map counts = new HashMap();
                for (int i=0; i<12; i++) { counts.put(i, 0.0); };
                data.put("monthlyCounts", counts);
                data.put("years", new HashSet());
                data;
            ),
            action(
                Calendar cal = Calendar.getInstance();
                cal.setTime($event.getTimestamp());
                int month = cal.get(Calendar.MONTH);
                Map counts = (Map)data.get("monthlyCounts");
                counts.put(month, (Double)counts.get(month) + 1.0);
                ((Set)data.get("years")).add(cal.get(Calendar.YEAR));
            ),
            result(
                data;
            )
        )

        // AŽURIRAN USLOV: Pozivamo novu 'findSeasonalSpike' metodu i hvatamo rezultat
        $spikeResult: SeasonalSpikeResult(spike == true, $seasonName: seasonName) from CepHelper.findSeasonalSpike($analysis)

        not SeasonalTipGenerated(mineralId == $mineralId, location == $location)
    then
        System.out.println("$$$ DETEKTOVAN SEZONSKI OBRAZAC! $$$");

        String message = String.format(
            "Podaci pokazuju da se ovaj mineral na lokaciji '%s' značajno češće pronalazi tokom %s.",
            $location, $seasonName
        );

        drools.insert(new CreateSeasonalTipRequest($mineralId, $location, message));
        drools.insert(new SeasonalTipGenerated($mineralId, $location));
end